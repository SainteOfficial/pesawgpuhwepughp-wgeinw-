-- Local Script zum Ausgeben aller Karten, Mengen und Raritäten (automatisch beim Ausführen)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local module = require(ReplicatedStorage:WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local LocalUser = module.import(script, ReplicatedStorage, "TS", "user", "local", "local-user").LocalUser

-- Funktion zum Ausgeben aller Karten
local function alleKartenAusgeben()
    print("=== KARTENSAMMLUNG DES BENUTZERS ===")
    
    -- Warten auf vollständiges Laden des LocalUser-Objekts und der Karten
    while not LocalUser or not LocalUser.atomMap or not LocalUser.atomMap.player or not LocalUser.atomMap.player() do
        task.wait(0.1)
        print("Warte auf Spielerdaten...")
    end
    
    local spielerKarten = LocalUser.atomMap.player().cards.content
    if not spielerKarten then
        print("Keine Kartendaten gefunden.")
        return
    end
    
    -- Durch alle Karten iterieren und sie ausgeben
    for kartenId, kartenDaten in pairs(spielerKarten) do
        local menge = 0
        local kartenObjekt = nil
        
        -- Verschiedene Datenstrukturen behandeln
        if type(kartenDaten) == "table" then
            if kartenDaten.getAmount then
                menge = kartenDaten:getAmount()
            end
            
            if kartenDaten.getCard then
                kartenObjekt = kartenDaten:getCard()
            end
        else
            menge = kartenDaten -- Falls die Menge direkt gespeichert ist
        end
        
        local raritätInfo = ""
        
        -- Rarität extrahieren, wenn verfügbar
        if kartenObjekt and kartenObjekt.rarity then
            -- Rarität-Typ
            if type(kartenObjekt.rarity) == "table" then
                if kartenObjekt.rarity.name then
                    raritätInfo = "Typ: " .. tostring(kartenObjekt.rarity.name)
                end
                
                -- Numerische Rarität suchen (1/X)
                local numerischeRarität = kartenObjekt.rarity.odds or 
                                          kartenObjekt.rarity.chance or 
                                          kartenObjekt.rarity.rarity or 
                                          kartenObjekt.rarity.rate or
                                          kartenObjekt.rarityOdds or
                                          kartenObjekt.odds
                
                if numerischeRarität then
                    if raritätInfo ~= "" then
                        raritätInfo = raritätInfo .. ", "
                    end
                    raritätInfo = raritätInfo .. "Rarität: 1/" .. tostring(numerischeRarität)
                end
            elseif type(kartenObjekt.rarity) == "string" then
                raritätInfo = "Rarität: " .. kartenObjekt.rarity
            end
        end
        
        -- Name der Karte, falls verfügbar
        local kartenName = kartenObjekt and kartenObjekt.name or kartenId
        
        print("Karte: " .. tostring(kartenName) .. ", Menge: " .. tostring(menge) .. 
              (raritätInfo ~= "" and (", " .. raritätInfo) or ""))
    end
    
    print("==================")
end

-- Direkt ausführen, ohne auf Tastendruck zu warten
alleKartenAusgeben()
