local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RuntimeLib = ReplicatedStorage:WaitForChild("rbxts_include"):WaitForChild("RuntimeLib")
local module = require(RuntimeLib)

-- Import required modules
local LocalUser = module.import(script, ReplicatedStorage, "TS", "user", "local", "local-user").LocalUser
local Cards = module.import(script, ReplicatedStorage, "TS", "card", "cards").Cards
local UserCard = module.import(script, ReplicatedStorage, "TS", "user", "card", "user-card").UserCard
local Stat = module.import(script, ReplicatedStorage, "TS", "stat", "stat").Stat

-- Function to safely print values of any type
local function safePrint(name, value)
    if value == nil then
        print(name .. ": nil")
        return
    end
    
    if type(value) == "function" then
        print(name .. ": [Function]")
    elseif type(value) == "table" and name ~= "__index" then
        print(name .. ": [Table]")
    else
        print(name .. ": " .. tostring(value))
    end
end

-- Function to print detailed information about a card
local function printCardInfo(userCard)
    local card = userCard:getCard()
    
    print("\n========== CARD: " .. card.id .. " ==========")
    
    -- Basic card information
    print("\n--- BASIC INFO ---")
    safePrint("Name", card.name)
    safePrint("ID", card.id)
    safePrint("Amount", userCard:getAmount())
    safePrint("Rarity", card.rarity)
    safePrint("Is Support", card.isSupport)
    safePrint("Denominator", card.denominator)
    
    -- Stats information
    print("\n--- STATS ---")
    pcall(function()
        if type(card.getStat) == "function" then
            for _, statType in pairs(Stat) do
                if type(statType) ~= "function" then
                    safePrint("Stat(" .. tostring(statType) .. ")", card:getStat(statType))
                end
            end
        end
    end)
    
    -- Deck status
    print("\n--- DECK STATUS ---")
    pcall(function()
        safePrint("In Party", LocalUser.deck:isCardInParty(userCard))
        
        local followingCard = LocalUser.deck:getFollowingCard()
        safePrint("Is Following Card", followingCard and followingCard.id == card.id)
        
        if type(card.hasFollowEffect) == "function" then
            safePrint("Has Follow Effect", card:hasFollowEffect())
        end
    end)
    
    -- All card properties
    print("\n--- ALL CARD PROPERTIES ---")
    for key, value in pairs(card) do
        safePrint(key, value)
    end
    
    -- All UserCard properties
    print("\n--- ALL USERCARD PROPERTIES ---")
    for key, value in pairs(userCard) do
        safePrint(key, value)
    end
end

-- Function to get all cards (real or mock)
local function getAllCards()
    local cards = {}
    local useRealCards = false
    
    -- Try to get real user cards
    pcall(function()
        local userCards = LocalUser.deck:getCards()
        if next(userCards) ~= nil then
            useRealCards = true
            for _, card in pairs(userCards) do
                table.insert(cards, card)
            end
        end
    end)
    
    -- If no real cards found, use mock cards
    if not useRealCards then
        print("No real cards found. Using mock cards.")
        for _, card in pairs(Cards) do
            table.insert(cards, UserCard.new(nil, card, 1))
        end
    else
        print("Using real user cards.")
    end
    
    return cards
end

-- Main function to print all cards
local function printAllUserCards()
    print("\n============================================")
    print("         ALL USER CARDS INFORMATION         ")
    print("============================================")
    
    local cards = getAllCards()
    print("Total cards: " .. #cards)
    
    for i, userCard in ipairs(cards) do
        printCardInfo(userCard)
    end
    
    print("\n============================================")
    print("           END OF USER CARDS                ")
    print("============================================")
end

-- Execute the function
printAllUserCards()
