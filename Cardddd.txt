-- Erweitertes Script mit detaillierter Rarität-Ausgabe
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local module = require(ReplicatedStorage:WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local LocalUser = module.import(script, ReplicatedStorage, "TS", "user", "local", "local-user").LocalUser
local Rarity = module.import(script, ReplicatedStorage, "TS", "rarity").Rarity

local function alleKartenAusgeben()
    print("=== DETAILLIERTE KARTENSAMMLUNG ===")
    
    local spielerKarten = LocalUser.atomMap.player().cards.content
    
    for kartenId, kartenDaten in pairs(spielerKarten) do
        local menge = type(kartenDaten) == "table" and kartenDaten.getAmount and kartenDaten:getAmount() or kartenDaten
        
        -- Karte mit allen Details abrufen
        local karte = kartenDaten:getCard()
        
        print("▶ KARTE: " .. (karte.name or kartenId))
        print("  Menge: " .. tostring(menge))
        
        -- Rarität Informationen
        if karte.rarity then
            -- Rarität-Typ (Rainbow, Secret, etc.)
            local raritätTyp = "Unbekannt"
            for name, wert in pairs(Rarity) do
                if karte.rarity == wert then
                    raritätTyp = name
                    break
                end
            end
            print("  Rarität-Typ: " .. raritätTyp)
            
            -- Numerische Rarität (1/100m etc.)
            if karte.rarityOdds or karte.odds or karte.rarity.odds then
                local odds = karte.rarityOdds or karte.odds or karte.rarity.odds
                print("  Numerische Rarität: 1/" .. tostring(odds))
            end
            
            -- Weitere Eigenschaften durchsuchen
            for prop, value in pairs(karte) do
                if string.find(string.lower(prop), "rarity") or string.find(string.lower(prop), "odds") or
                   string.find(string.lower(prop), "chance") then
                    print("  " .. prop .. ": " .. tostring(value))
                end
            end
        end
        
        print("") -- Leerzeile zwischen Karten
    end
    
    print("==================")
end

-- Event-Handler für Tastendruck
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.P then
        alleKartenAusgeben()
    end
end)

print("Drücke P, um deine detaillierte Kartensammlung anzuzeigen")
